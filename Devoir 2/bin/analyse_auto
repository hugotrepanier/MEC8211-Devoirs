#!/usr/bin/bash
#set -ex

# Verification du nombre d'arguments fournis
if test $# -ne 4; then
    echo "Usage: analyse_auto {fichier du devoir 2} {fichier des paramètres d'entrée} {fichier contenant les nombres de noeuds} {fichier contenant les pas de temps} "
    exit 1
fi

# Initialisation des variables
editor=nano
nb_resolutions=$(wc -l < "$3")  # Nombre de resolutions en spatial
nb_resolutions_2=$(wc -l < "$4")  # Nombre de resolution en temporel
nb_compt=1  # Compteur d'iteration
fixed_interval_X=100   # Valeur fixe pour XXXX
fixed_interval_Y=10000 # Valeur fixe pour YYYY


# Llecture des bornes spatiales et temporelles dans le fichier $2.txt des parametres d'entree
rayon_min=0
rayon_max=`grep 'R =' ../data/$2.txt | awk '{print $NF}'`

temps_min=`grep 'temps_start =' ../data/$2.txt | awk '{print $NF}'`
temps_max=`grep 'temps_stop =' ../data/$2.txt | awk '{print $NF}'`

echo ""
echo "*******************************************"
echo "        ANALYSE DE CONVERGENCE"
echo "*******************************************"
echo ""
echo "--> Nombre de résolutions testées : $nb_resolutions"
echo ""

echo "Analyse de convergence:" > resultats
echo "" >> resultats

# Verifier si le script Python existe
if test -s "../src/$1.py"; then
    echo "--> Le fichier Devoir_2.py existe !"
    echo ""
    echo "Editer le fichier $1.py (o-n) ?"
    read -r rep
    if test "$rep" = "o"; then
        "$editor" "../src/$1.py"
    fi
else
    echo "ALERTE: Le fichier $1.py n'existe pas ! Sortie du script..."
    exit 1
fi

# Boucle de résolution pour les différents pas de discrétisations spatiales, en posant Ntemps fixe 
while [[ $nb_compt -le $nb_resolutions ]]; do
    new_intervals=$(head -n "$nb_compt" "$3" | tail -n 1)  # Nombre d'intervalles N a tester pour cette iteration

    echo ""
    echo "--> Calcul pour $new_intervals intervalles...."

    # Creation d'un dossier temporaire pour la simulation
    mkdir -p "simulation_avec_$new_intervals/data"
    mkdir -p "simulation_avec_$new_intervals/src"

    # Remplacer les XXXX et YYYY dans Input_data.txt
    sed -e "s/XXXX/$new_intervals/" -e "s/YYYY/$fixed_interval_Y/" -e 's/plot = "Affirmative"/plot = "Negative"/' "../data/Input_data.txt" > "simulation_avec_$new_intervals/data/Input_data.txt"
    
    # Afficher le fichier Input_data.txt modifié
    echo "Modified Input_data.txt:"
    cat "simulation_avec_$new_intervals/data/Input_data.txt"

    # Copie du fichier Python $1.py dans le dossier temporaire pour la simulation
    cp "../src/$1.py" "simulation_avec_$new_intervals/src/"

    # Executer le script Python copié avec l'addresse du fichier des données d'entrées Input_data.txt
    python3 "simulation_avec_$new_intervals/src/$1.py" "simulation_avec_$new_intervals/data/$2.txt" >> resultats_N

    # Suppression du dossier temporaire
    rm -r "simulation_avec_$new_intervals"

    echo ".... Done !"

    # Incrementation du compteur
    nb_compt=$((nb_compt + 1))
done

nb_compt=1  # Reinitialisation du compteur
# Boucle de résolution pour les différents pas de discrétisations temporelles, en posant N fixe
while [[ $nb_compt -le $nb_resolutions_2 ]]; do
    new_intervals=$(head -n "$nb_compt" "$4" | tail -n 1)  # Nombre d'intervalles Ntemps a tester pour cette iteration

    echo ""
    echo "--> Calcul pour $new_intervals intervalles...."

    # Creation d'un dossier temporaire pour la simulation
    mkdir -p "simulation_avec_$new_intervals/data"
    mkdir -p "simulation_avec_$new_intervals/src"

    # Remplacer les XXXX et YYYY dans Input_data.txt
    sed -e "s/YYYY/$new_intervals/" -e "s/XXXX/$fixed_interval_X/" -e 's/plot = "Affirmative"/plot = "Negative"/' "../data/Input_data.txt" > "simulation_avec_$new_intervals/data/Input_data.txt"
    
    # Afficher le fichier Input_data.txt modifié
    echo "Modified Input_data.txt:"
    cat "simulation_avec_$new_intervals/data/Input_data.txt"

    # Copie du fichier Python $1.py dans le dossier temporaire pour la simulation
    cp "../src/$1.py" "simulation_avec_$new_intervals/src/"

    # Executer le script Python copié avec l'addresse du fichier des données d'entrées Input_data.txt
    python3 "simulation_avec_$new_intervals/src/$1.py" "simulation_avec_$new_intervals/data/$2.txt" >> resultats_T

    # Suppression du dossier temporaire
    rm -r "simulation_avec_$new_intervals"

    echo ".... Done !"

    # Incrementation du compteur
    nb_compt=$((nb_compt + 1))
done


# Extraction des erreurs absolues dans le fichier de compilation des resultats
# et récriture de ces seules valeurs dans le fichier d'erreurs correspondants
grep 'L1_N' resultats_N | awk '{print $NF}' > erreurs_L1_N
grep 'L2_N' resultats_N | awk '{print $NF}' > erreurs_L2_N
grep 'Linf_N' resultats_N | awk '{print $NF}' > erreurs_Linf_N


grep 'L1_T' resultats_T | awk '{print $NF}' > erreurs_L1_T
grep 'L2_T' resultats_T | awk '{print $NF}' > erreurs_L2_T
grep 'Linf_T' resultats_T | awk '{print $NF}' > erreurs_Linf_T

# Edition du fichier python permettant d'ajouter les bornes spatiales et temporelles et le nom du fichier passe
# argument 2 ($2)
sed -e "s/RAYON_A/$rayon_min/" -e "s/RAYON_B/$rayon_max/" -e "s/TEMPS_A/$temps_min/" -e "s/TEMPS_B/$temps_max/" -e "s/NOM_DU_FICHIER/$3/" analyse_de_convergence.py > analyse_de_convergence_run.py

echo ""
echo "--> Exécution du script python..."
echo ""

# Execution en arrière plan (&) du programme python analyse_de_convergence.py tracant
# le graphe et obtenant la régression en loi de puissance
python3 analyse_de_convergence_run.py &

sleep 6
 
# Suppression automatique des fichiers de résultats
rm -v "erreurs_L1_N"
rm -v "erreurs_L1_T"
rm -v "erreurs_L2_N"
rm -v "erreurs_L2_T"
rm -v "erreurs_Linf_N"
rm -v "erreurs_Linf_T"
rm -v "resultats"
rm -v "resultats_N"
rm -v "resultats_T"

echo ""
echo "*******************************************"
echo "     ANALYSE DE CONVERGENCE TERMINÉE"
echo "*******************************************"
echo ""
